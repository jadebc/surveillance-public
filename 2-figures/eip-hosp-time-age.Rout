
R version 3.6.1 (2019-07-05) -- "Action of the Toes"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin15.6.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##########################################
> # Shoo the Flu evaluation
> # Surveillance analysis
> 
> # Weekly incidence of flu hospitalization
> # Stratified by age
> ##########################################
> rm(list=ls())
> source(here::here("0-config.R"))

Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union


Attaching package: ‘zoo’

The following objects are masked from ‘package:base’:

    as.Date, as.Date.numeric


Attaching package: ‘gridExtra’

The following object is masked from ‘package:dplyr’:

    combine

── Attaching packages ─────────────────────────────────────── tidyverse 1.3.0 ──
✔ tibble  2.1.3     ✔ purrr   0.3.3
✔ tidyr   1.0.0     ✔ stringr 1.4.0
✔ readr   1.3.1     ✔ forcats 0.4.0
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ gridExtra::combine() masks dplyr::combine()
✖ dplyr::filter()      masks stats::filter()
✖ tibble::has_name()   masks assertthat::has_name()
✖ dplyr::lag()         masks stats::lag()

Attaching package: ‘lubridate’

The following object is masked from ‘package:base’:

    date


Attaching package: ‘scales’

The following object is masked from ‘package:purrr’:

    discard

The following object is masked from ‘package:readr’:

    col_factor

here() starts at /Users/jadederong/Documents/CRG/flu/surveillance

Attaching package: ‘here’

The following object is masked from ‘package:lubridate’:

    here

> 
> # load CEIP datasets
> flu = readRDS(paste0(data_dir, "ceip-flu-clean.RDS"))
> 
> # load census data
> census = readRDS(paste0(clean_census_dir, "Censpop-agecat-sex-race-zip.RDS"))
> 
> # subset to flu positive cases
> flu=subset(flu,flu$flupos==1)
> 
> # clean date
> flu$testdate=as.Date(paste0(flu$month, "/", flu$day, "/", flu$year),format="%m/%d/%Y")
> 
> # add week and year variable
> flu$week=week(flu$testdate)
> 
> # add pre during program
> flu$pre=ifelse(flu$flusesn<=1314,"Pre-intervention","During intervention")
> flu$pre=factor(flu$pre,levels=c("Pre-intervention","During intervention"))
> 
> # recoding unknown race to be other to merge with cens
> flu$race[flu$race=="Unknown"]="Other"
> 
> nonelem = flu %>% filter(nonelem == 1)
> eld = flu %>% filter(eld == 1)
> 
> #--------------------------------------
> # aggregate flu data by season and district
> #--------------------------------------
> nonelem_flu_tot = nonelem %>%
+   group_by(dist, flusesn, year, pre, week) %>%
+   summarise(flupos = sum(flupos)) %>%
+   rename(seas = flusesn)
> 
> eld_flu_tot = eld %>%
+   group_by(dist, flusesn, year, pre, week) %>%
+   summarise(flupos = sum(flupos)) %>%
+   rename(seas = flusesn)
> 
> #--------------------------------------
> # aggregate census data by season and district
> #--------------------------------------
> census_clean = prep_census(data = census, 
+                            covariates = c("agecat", "sex", "race"), 
+                            season_list = c(0809, 0910, 1011, 1112, 1213, 1314, 1415, 1516, 1617, 1718))
> 
> nonelem_cens = census_clean %>% 
+   filter(agecat %in% c(
+     "Under 5" , "10 to 14", "15 to 17", "18 and 19",
+     "20", "21", "22 to 24", "25 to 29", "30 to 34",
+     "35 to 39", "40 to 44", "45 to 49", "50 to 54",
+     "55 to 59", "60 and 61", "62 to 64",
+     "65 and 66", "67 to 69" , "70 to 74" , "75 to 79" , "80 to 84" , "85 and over" 
+   )) %>%
+   group_by(dist, seas) %>%
+   summarise(N = sum(N))
>   
> eld_cens = census_clean %>% 
+   filter(agecat %in% c(
+     "65 and 66", "67 to 69" , "70 to 74" , "75 to 79" , "80 to 84" , "85 and over"   
+   )) %>%
+   group_by(dist, seas) %>%
+   summarise(N = sum(N))
> 
> #--------------------------------------
> # merge numerator and denominator
> #--------------------------------------
> 
> # create master with all seasons, year, week
> master = expand.grid(
+   dist = c("OUSD", "WCCUSD"),
+   seas = unique(nonelem_cens$seas),
+   week = seq(1,53)
+ ) %>%
+   mutate(year = case_when(
+     seas == 809 & week >=40 ~ 2008,
+     seas == 809 & week <=20 ~ 2009,
+     seas == 910 & week >=40  ~ 2009,
+     seas == 910 & week <=20 ~ 2010,
+     seas == 1011 & week >=40  ~ 2010,
+     seas == 1011 & week <=20 ~ 2011,
+     seas == 1112 & week >=40  ~ 2011,
+     seas == 1112 & week <=20 ~ 2012,
+     seas == 1213 & week >=40  ~ 2012,
+     seas == 1213 & week <=20 ~ 2013,
+     seas == 1314 & week >=40  ~ 2013,
+     seas == 1314 & week <=20 ~ 2014,
+     seas == 1415 & week >=40  ~ 2014,
+     seas == 1415 & week <=20 ~ 2015,
+     seas == 1516 & week >=40  ~ 2015,
+     seas == 1516 & week <=20 ~ 2016,
+     seas == 1617 & week >=40  ~ 2016,
+     seas == 1617 & week <=20 ~ 2017,
+     seas == 1718 & week >=40  ~ 2017,
+     seas == 1718 & week <=20 ~ 2018
+   )) %>%
+   mutate(pre = ifelse(seas<=1314, "Pre-intervention", "During intervention"
+   ) %>% as.factor()) %>%
+   dplyr::select(dist, seas, pre, year, week)
> 
> master_flu_nonelem = full_join(master, nonelem_flu_tot, by = c("dist", "seas", "pre", "year", "week"))
Warning messages:
1: Column `dist` joining factor and character vector, coercing into character vector 
2: Column `pre` joining factors with different levels, coercing to character vector 
> master_flu_eld = full_join(master, eld_flu_tot, by = c("dist", "seas", "pre", "year", "week"))
Warning messages:
1: Column `dist` joining factor and character vector, coercing into character vector 
2: Column `pre` joining factors with different levels, coercing to character vector 
> 
> # impute 0 if no flu cases
> master_flu_nonelem = master_flu_nonelem %>% mutate(flupos = ifelse(is.na(flupos), 0, flupos))
> master_flu_eld = master_flu_eld %>% mutate(flupos = ifelse(is.na(flupos), 0, flupos))
> 
> nonelem_plot_df = full_join(master_flu_nonelem, nonelem_cens, by = c("dist", "seas"))
Warning message:
Column `dist` joining character vector and factor, coercing into character vector 
> eld_plot_df = full_join(master_flu_eld, eld_cens, by = c("dist", "seas"))
Warning message:
Column `dist` joining character vector and factor, coercing into character vector 
> 
> 
> #--------------------------------------
> # calculate rates and CIs
> #--------------------------------------
> nonelem_plot_df$rate=(nonelem_plot_df$flupos/nonelem_plot_df$N)*100000
> nonelem_plot_df = nonelem_plot_df %>% arrange(year, week, dist)
> 
> eld_plot_df$rate=(eld_plot_df$flupos/eld_plot_df$N)*100000
> eld_plot_df = eld_plot_df %>% arrange(year, week, dist)
> 
> nonelem_plot_df$date = as.Date(paste(nonelem_plot_df$year, nonelem_plot_df$week, 1, sep="-"), "%Y-%U-%u")
> eld_plot_df$date = as.Date(paste(eld_plot_df$year, eld_plot_df$week, 1, sep="-"), "%Y-%U-%u")
> 
> nonelem_plot_df = nonelem_plot_df %>% filter(date < as.Date("07-01-2018", format = "%m-%d-%Y"))
> eld_plot_df = eld_plot_df %>% filter(date < as.Date("07-01-2018", format = "%m-%d-%Y"))
> 
> nonelem_plot_df = nonelem_plot_df %>%
+   mutate(dist_f = case_when(
+     dist == "OUSD" ~ "Intervention",
+     dist == "WCCUSD" ~ "Comparison"
+   )) %>%
+   mutate(dist_f = factor(dist_f, levels = c("Intervention", "Comparison")))
> 
> eld_plot_df = eld_plot_df %>%
+   mutate(dist_f = case_when(
+     dist == "OUSD" ~ "Intervention",
+     dist == "WCCUSD" ~ "Comparison"
+   )) %>%
+   mutate(dist_f = factor(dist_f, levels = c("Intervention", "Comparison")))
> 
> 
> # Change rates in summer months to N/A values to create breaks in the figure
> summer_months = c(06, 07, 08, 09)
> 
> ### Create month and year columns for easier data manipulation
> nonelem_plot_df = nonelem_plot_df %>% mutate(mon = month(date)) %>% mutate(yr = year(date))
> eld_plot_df = eld_plot_df %>% mutate(mon = month(date)) %>% mutate(yr = year(date))
> 
> ### For existing data in summer months, set rate to N/A
> nonelem_plot_df = nonelem_plot_df %>% mutate(rate = replace(rate, month(date) %in% summer_months, NA))
> eld_plot_df = eld_plot_df %>% mutate(rate = replace(rate, month(date) %in% summer_months, NA))
> 
> ### For data without points in summer months, create a new row in June and September for the year and set rate to NA
> for (year in unique(nonelem_plot_df$yr)){
+   for (tr_group in unique(nonelem_plot_df$dist_f)){
+     for (season in unique(nonelem_plot_df$seas)){
+       new_row1 = list(NA,season,NA,year,NA,NA,NA,NA, 
+                       as.Date(paste(year, "-06-01", sep="")), tr_group, 6, 2010)
+       new_row2 = list(NA,season,NA,year,NA,NA,NA,NA,
+                       as.Date(paste(year, "-09-01", sep="")), tr_group, 6, 2010)
+       names(new_row1) = colnames(nonelem_plot_df)
+       names(new_row2) = colnames(nonelem_plot_df)
+       nonelem_plot_df = rbind(nonelem_plot_df, new_row1)
+       nonelem_plot_df = rbind(nonelem_plot_df, new_row2)
+     }
+   }
+ }
> 
> for (year in unique(eld_plot_df$yr)){
+   for (tr_group in unique(eld_plot_df$dist_f)){
+     for (season in unique(eld_plot_df$seas)){
+       new_row1 = list(NA,season,NA,year,NA,NA,NA,NA, 
+                       as.Date(paste(year, "-06-01", sep="")), tr_group, 6, 2010)
+       new_row2 = list(NA,season,NA,year,NA,NA,NA,NA, 
+                       as.Date(paste(year, "-09-01", sep="")), tr_group, 6, 2010)
+       names(new_row1) = colnames(eld_plot_df)
+       names(new_row2) = colnames(eld_plot_df)
+       eld_plot_df = rbind(eld_plot_df, new_row1)
+       eld_plot_df = rbind(eld_plot_df, new_row2)
+     }
+   }
+ }
> 
> # -----------------------------------------
> # Plot from 2011-2018
> # -----------------------------------------
> nonelem_plot_df = nonelem_plot_df %>% filter(seas >= 1112) %>% filter(year >= 2011) 
> eld_plot_df = eld_plot_df %>% filter(seas >= 1112) %>% filter(year >= 2011) 
> 
> # impute missings for outside flu season
> # weeks 19-39
> x = c(as.Date("2011-04-30") + 7*seq(1,20))
> 
> # why are weeks 40-48 missing from 2012?
> 
> #-------------------------------------------
> # non elementary aged 
> #-------------------------------------------
> 
> nonelem_plot = ggplot(nonelem_plot_df,aes(x=date,y=rate)) +
+     # Basic plot with x and y labels
+     geom_line(aes(col=dist_f)) +
+     ylab("Incidence of influenza-related\n hospitalization (per 100,000)") +
+     xlab("")   +
+     
+     # Scale x-axis and y-axis
+     scale_x_date(labels = date_format("%b"), date_breaks = "2 months") +
+     coord_cartesian(ylim = c(0, 30), expand = FALSE) +
+     
+     # Define colors
+     scale_color_manual("District",values=c("#2185c5","#ff9715"))+
+     
+     # Text annotations for program period & x-axis years
+     annotate(geom = "text", 
+              x = c(
+                as.Date("02-01-2012", format = "%m-%d-%Y"), 
+                as.Date("02-01-2013", format = "%m-%d-%Y"), 
+                as.Date("02-01-2014", format = "%m-%d-%Y"), 
+                as.Date("02-01-2015", format = "%m-%d-%Y"), 
+                as.Date("02-01-2016", format = "%m-%d-%Y"), 
+                as.Date("02-01-2017", format = "%m-%d-%Y"), 
+                as.Date("02-01-2018", format = "%m-%d-%Y")), 
+              y = -3, 
+              label = c("2011-12","2012-13",
+                        "2013-14","2014-15","2015-16","2016-17","2017-18"), 
+              size = 4) +
+     
+     # Label program period
+     annotate(geom="text", x=as.Date("2-25-2013", format = "%m-%d-%Y"), y=28,label="Pre-intervention period", size = 5)+
+     
+     annotate(geom="text", x=as.Date("7-01-2015", format = "%m-%d-%Y"), y=28,label="Intervention period", size = 5)+
+     annotate(geom="text", x=as.Date("7-01-2015", format = "%m-%d-%Y"), y=26,label="(Ineffective vaccine)")+
+     
+     annotate(geom="text", x=as.Date("7-01-2017", format = "%m-%d-%Y"), y=28,label="Intervention period", size = 5)+
+     annotate(geom="text", x=as.Date("7-01-2017", format = "%m-%d-%Y"), y=26,label="(Moderately effective vaccine)")+
+     
+     # Add vertical lines
+     geom_vline(xintercept=as.Date("07-01-2014", format = "%m-%d-%Y"), linetype="dashed")+
+     geom_vline(xintercept=as.Date("07-01-2016", format = "%m-%d-%Y"), linetype="dashed")+
+     
+     # Add minimalist theme
+     theme_bw()+
+     theme(axis.title.x = element_text(margin = margin(t = 5, r = 5, b = 5, l = 5)),
+           axis.text.x = element_text(vjust = 0.25),
+           plot.margin = margin(t = 3, r = 10, b = 18, l = 3, "pt"),
+           legend.position=c(0.055,0.84),
+           legend.background = element_rect(color = "black", 
+                                            size = 0.25, linetype = "solid"),
+           plot.title = element_text(hjust = 0.5))
> 
> 
> # remove clipping of x axis labels
> nonelem_plot_gt <- ggplot_gtable(ggplot_build(nonelem_plot))
Warning message:
Removed 56 rows containing missing values (geom_path). 
> nonelem_plot_gt$layout$clip[nonelem_plot_gt$layout$name == "panel"] <- "off"
> grid::grid.draw(nonelem_plot_gt)
> 
> 
> ggsave(nonelem_plot_gt, file=paste0(fig_dir,"flu_hosprate_week_nonelem.pdf"),
+        width=12,height=4)
> 
> 
> #-------------------------------------------
> # elderly
> #-------------------------------------------
> 
> eld_plot = ggplot(eld_plot_df,aes(x=date,y=rate)) +
+   # Basic plot with x and y labels
+   geom_line(aes(col=dist_f)) +
+   ylab("Incidence of influenza-related\n hospitalization (per 100,000)") +
+   xlab("")   +
+   
+   # Scale x-axis and y-axis
+   scale_x_date(labels = date_format("%b"), date_breaks = "2 months") +
+   coord_cartesian(ylim = c(0, 160), expand = FALSE) +
+   
+   # Define colors
+   scale_color_manual("District",values=c("#2185c5","#ff9715"))+
+   
+   # Text annotations for program period & x-axis years
+   annotate(geom = "text", 
+            x = c(
+              as.Date("02-01-2012", format = "%m-%d-%Y"), 
+              as.Date("02-01-2013", format = "%m-%d-%Y"), 
+              as.Date("02-01-2014", format = "%m-%d-%Y"), 
+              as.Date("02-01-2015", format = "%m-%d-%Y"), 
+              as.Date("02-01-2016", format = "%m-%d-%Y"), 
+              as.Date("02-01-2017", format = "%m-%d-%Y"), 
+              as.Date("02-01-2018", format = "%m-%d-%Y")), 
+            y = -15, 
+            label = c("2011-12","2012-13",
+                      "2013-14","2014-15","2015-16","2016-17","2017-18"), 
+            size = 4) +
+   
+   # Label program period
+   annotate(geom="text", x=as.Date("2-25-2013", format = "%m-%d-%Y"), y=155,label="Pre-intervention period", size = 5)+
+   
+   annotate(geom="text", x=as.Date("7-01-2015", format = "%m-%d-%Y"), y=155,label="Intervention period", size = 5)+
+   annotate(geom="text", x=as.Date("7-01-2015", format = "%m-%d-%Y"), y=145,label="(Ineffective vaccine)")+
+   
+   annotate(geom="text", x=as.Date("7-01-2017", format = "%m-%d-%Y"), y=155,label="Intervention period", size = 5)+
+   annotate(geom="text", x=as.Date("7-01-2017", format = "%m-%d-%Y"), y=145,label="(Moderately effective vaccine)")+
+   
+   # Add vertical lines
+   geom_vline(xintercept=as.Date("07-01-2014", format = "%m-%d-%Y"), linetype="dashed")+
+   geom_vline(xintercept=as.Date("07-01-2016", format = "%m-%d-%Y"), linetype="dashed")+
+   
+   # Add minimalist theme
+   theme_bw()+
+   theme(axis.title.x = element_text(margin = margin(t = 5, r = 5, b = 5, l = 5)),
+         axis.text.x = element_text(vjust = 0.25),
+         plot.margin = margin(t = 3, r = 10, b = 18, l = 3, "pt"),
+         legend.position=c(0.055,0.84),
+         legend.background = element_rect(color = "black", 
+                                          size = 0.25, linetype = "solid"),
+         plot.title = element_text(hjust = 0.5))
> 
> # remove clipping of x axis labels
> eld_plot_gt <- ggplot_gtable(ggplot_build(eld_plot))
Warning message:
Removed 56 rows containing missing values (geom_path). 
> eld_plot_gt$layout$clip[eld_plot_gt$layout$name == "panel"] <- "off"
> grid::grid.draw(eld_plot_gt)
> 
> ggsave(eld_plot_gt, file=paste0(fig_dir,"flu_hosprate_week_eld.pdf"),
+        width=12,height=4)
> 
> proc.time()
   user  system elapsed 
  2.130   0.152   2.306 
